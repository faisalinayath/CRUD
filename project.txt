public IActionResult Login()
{
    if (User.Identity.IsAuthenticated)
    {
        return RedirectToAction("Index", "Employer");
    }
    return View();
}

[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> Login(Login obj)
{
    if (ModelState.IsValid)
    {
        var user = _db.Register.FirstOrDefault(u => u.Email == obj.Email && u.Password == obj.Password);

        if (user != null)
        {
            HttpContext.Session.SetString("Email", user.Email);
            HttpContext.Session.SetString("Name", user.Name);
            string Phone_Number = (user.Phone).ToString();
            HttpContext.Session.SetString("Phone", Phone_Number);

            List<Claim> claims = new List<Claim>()
            {
                new Claim(ClaimTypes.NameIdentifier, user.Email),
                new Claim("OtherProperties", "ExampleRole")
            };

            ClaimsIdentity claimsIdentity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);

            AuthenticationProperties properties = new AuthenticationProperties()
            {
                AllowRefresh = true
            };

            await HttpContext.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme, new ClaimsPrincipal(claimsIdentity), properties);

            return RedirectToAction("Index", "Main");
        }
    }
    return View(obj);
}
